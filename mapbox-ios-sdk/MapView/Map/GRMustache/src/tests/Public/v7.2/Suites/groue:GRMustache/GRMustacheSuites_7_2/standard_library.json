{
  "tests": [
    
    // each(array)
    
    {
      "name": "`each` filter iterates its array argument and makes the `@first`, `@last` keys available for rendering.",
      "data": {
        "array": ["a", "b", "c", "d"]
      },
      "template": "{{# each(array) }}{{^ @first }}{{# @last }} and {{^}}, {{/}}{{/}}{{.}}{{/}}",
      "expected": "a, b, c and d"
    },
    {
      "name": "`each` filter iterates its array argument and makes the `@index` key available for rendering.",
      "data": {
        "array": ["a", "b", "c", "d"]
      },
      "template": "{{# each(array) }}{{ @index }}{{/}}",
      "expected": "0123"
    },
    {
      "name": "`each` filter iterates its array argument and makes the `@indexPlusOne` key available for rendering.",
      "data": {
        "array": ["a", "b", "c", "d"]
      },
      "template": "{{# each(array) }}{{ @indexPlusOne }}{{/}}",
      "expected": "1234"
    },
    {
      "name": "`each` filter iterates its array argument and makes the `@indexIsEven` key available for rendering.",
      "data": {
        "array": ["a", "b", "c", "d"]
      },
      "template": "{{# each(array) }}{{# @indexIsEven }}e{{^}}o{{/}}{{/}}",
      "expected": "eoeo"
    },
    {
      "name": "`each` filter does not render for empty arrays.",
      "data": {
        "array": []
      },
      "template": "{{# each(array) }}---{{^}}+++{{/}}",
      "expected": "+++"
    },
    {
      "name": "`each` filter does not alter context access.",
      "data": { "array": [{ "name": "foo" }, { "name": "bar" }] },
      "template": "{{# each(array) }}<{{@index}}:{{name}}>{{/}}",
      "expected": "<0:foo><1:bar>"
    },
    {
      "name": "`each` filter should render independently all lists of an array.",
      "data": { "array": [["a", "b"], [], [0, 1]] },
      "template": "<{{# each(array) }}{{@index}}:({{#.}}{{.}}{{^}}-{{/}}){{/}}>",
      "expected": "<0:(ab)1:(-)2:(01)>"
    },
    
    // each(dictionary)
    
    {
      "name": "`each` filter iterates its dictionary argument and make the `@key` key available for rendering.",
      "data": {
        // Because dictionaries are fundamentally unordered, we can render only a single key.
        "dictionary": { "key": "value" }
      },
      "template": "{{# each(dictionary) }}{{ @key }}:{{.}}{{/}}",
      "expected": "key:value"
    },
    {
      "name": "`each` filter iterates its dictionary argument and make the `@first`, `@last` keys available for rendering.",
      "data": {
        // Because dictionaries are fundamentally unordered, we can only render a single unique value.
        "dictionary": { "key1": "value", "key2": "value", "key3": "value" }
      },
      "template": "{{# each(dictionary) }}{{^ @first }}{{# @last }} and {{^}}, {{/}}{{/}}{{.}}{{/}}",
      "expected": "value, value and value"
    },
    {
      "name": "`each` filter iterates its dictionary argument and makes the `@index` key available for rendering.",
      "data": {
        "dictionary": { "key1": "value1", "key2": "value2", "key3": "value3" }
      },
      "template": "{{# each(dictionary) }}{{ @indexPlusOne }}{{/}}",
      "expected": "123"
    },
    {
      "name": "`each` filter iterates its dictionary argument and makes the `@indexPlusOne` key available for rendering.",
      "data": {
        "dictionary": { "key1": "value1", "key2": "value2", "key3": "value3" }
      },
      "template": "{{# each(dictionary) }}{{ @indexPlusOne }}{{/}}",
      "expected": "123"
    },
    {
      "name": "`each` filter iterates its dictionary argument and makes the `@indexIsEven` key available for rendering.",
      "data": {
        "dictionary": { "key1": "value", "key2": "value", "key3": "value" }
      },
      "template": "{{# each(dictionary) }}{{# @indexIsEven }}e{{^}}o{{/}}{{/}}",
      "expected": "eoe"
    },
    {
      "name": "`each` filter does not render for empty dictionaries.",
      "data": {
        "dictionary": {}
      },
      "template": "{{# each(dictionary) }}---{{^}}+++{{/}}",
      "expected": "+++"
    },
    {
      "name": "`each` filter does not alter context access.",
      "data": { "dictionary": { "key": { "name": "foo" } } },
      "template": "{{# each(dictionary) }}<{{@key}}:{{name}}>{{/}}",
      "expected": "<key:foo>"
    },
    {
      "name": "`each` filter should render independently all lists of a dictionary.",
      "data": { "dictionary": { "key": [ "a", "b" ] } },
      "template": "{{# each(dictionary) }}{{ @key }}:{{#.}}{{.}}{{/}}{{/}}",
      "expected": "key:ab"
    }
  ]
}
